// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using vc_webapi.Data;

namespace vc_webapi.Migrations
{
    [DbContext(typeof(Vc_webapiContext))]
    [Migration("20191024143102_data-seeding2")]
    partial class dataseeding2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("vc_webapi.Model.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            Name = "SDJ1"
                        },
                        new
                        {
                            Id = 101L,
                            Name = "AJP1"
                        });
                });

            modelBuilder.Entity("vc_webapi.Model.Enrollment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EnrollmentDateUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CourseId = 100L,
                            EnrollmentDateUtc = new DateTime(2019, 7, 26, 14, 31, 2, 254, DateTimeKind.Utc).AddTicks(9383),
                            UserId = 100L
                        },
                        new
                        {
                            Id = 101L,
                            CourseId = 101L,
                            EnrollmentDateUtc = new DateTime(2019, 7, 26, 14, 31, 2, 255, DateTimeKind.Utc).AddTicks(31),
                            UserId = 100L
                        });
                });

            modelBuilder.Entity("vc_webapi.Model.Session", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CourseId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Session");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            CourseId = 100L,
                            Date = new DateTime(2019, 10, 24, 14, 31, 2, 254, DateTimeKind.Utc).AddTicks(6150)
                        },
                        new
                        {
                            Id = 101L,
                            CourseId = 100L,
                            Date = new DateTime(2019, 10, 24, 14, 31, 2, 254, DateTimeKind.Utc).AddTicks(6701)
                        },
                        new
                        {
                            Id = 102L,
                            CourseId = 101L,
                            Date = new DateTime(2019, 10, 24, 14, 31, 2, 254, DateTimeKind.Utc).AddTicks(7799)
                        },
                        new
                        {
                            Id = 103L,
                            CourseId = 101L,
                            Date = new DateTime(2019, 10, 24, 14, 31, 2, 254, DateTimeKind.Utc).AddTicks(7800)
                        });
                });

            modelBuilder.Entity("vc_webapi.Model.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("vc_webapi.Model.UserSession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("SessionId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSession");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            SessionId = 100L,
                            UserId = 100L
                        },
                        new
                        {
                            Id = 101L,
                            SessionId = 101L,
                            UserId = 100L
                        },
                        new
                        {
                            Id = 102L,
                            SessionId = 102L,
                            UserId = 100L
                        },
                        new
                        {
                            Id = 103L,
                            SessionId = 103L,
                            UserId = 100L
                        });
                });

            modelBuilder.Entity("vc_webapi.Model.Video", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("Duration")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("RecordTimeUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("SessionId")
                        .HasColumnType("bigint");

                    b.Property<string>("ThumbnailURL")
                        .HasColumnType("text");

                    b.Property<string>("URL")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("Videos");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            Duration = 10L,
                            Name = "SDJ Lesson 1",
                            RecordTimeUtc = new DateTime(2019, 10, 24, 14, 31, 2, 254, DateTimeKind.Utc).AddTicks(5127),
                            SessionId = 100L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 101L,
                            Duration = 10L,
                            Name = "SDJ Lesson 1 part 2",
                            RecordTimeUtc = new DateTime(2019, 10, 24, 15, 16, 2, 254, DateTimeKind.Utc).AddTicks(6065),
                            SessionId = 100L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 102L,
                            Duration = 10L,
                            Name = "SDJ Lesson 1 part 3",
                            RecordTimeUtc = new DateTime(2019, 10, 24, 16, 1, 2, 254, DateTimeKind.Utc).AddTicks(6133),
                            SessionId = 100L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 103L,
                            Duration = 10L,
                            Name = "SDJ Lesson 1 part 4",
                            RecordTimeUtc = new DateTime(2019, 10, 24, 16, 56, 2, 254, DateTimeKind.Utc).AddTicks(6134),
                            SessionId = 100L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 104L,
                            Duration = 10L,
                            Name = "SDJ Lesson 2",
                            RecordTimeUtc = new DateTime(2019, 10, 31, 14, 31, 2, 254, DateTimeKind.Utc).AddTicks(6136),
                            SessionId = 101L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 105L,
                            Duration = 10L,
                            Name = "SDJ Lesson 2 part 2",
                            RecordTimeUtc = new DateTime(2019, 10, 31, 15, 16, 2, 254, DateTimeKind.Utc).AddTicks(6147),
                            SessionId = 101L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 106L,
                            Duration = 10L,
                            Name = "SDJ Lesson 2 part 3",
                            RecordTimeUtc = new DateTime(2019, 10, 31, 16, 1, 2, 254, DateTimeKind.Utc).AddTicks(6148),
                            SessionId = 101L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 107L,
                            Duration = 10L,
                            Name = "SDJ Lesson 2 part 3",
                            RecordTimeUtc = new DateTime(2019, 10, 31, 16, 56, 2, 254, DateTimeKind.Utc).AddTicks(6149),
                            SessionId = 101L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 108L,
                            Duration = 10L,
                            Name = "AJP Lesson 1",
                            RecordTimeUtc = new DateTime(2019, 10, 25, 14, 31, 2, 254, DateTimeKind.Utc).AddTicks(7788),
                            SessionId = 102L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 109L,
                            Duration = 10L,
                            Name = "AJP Lesson 1 part 2",
                            RecordTimeUtc = new DateTime(2019, 10, 25, 15, 16, 2, 254, DateTimeKind.Utc).AddTicks(7792),
                            SessionId = 102L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 110L,
                            Duration = 10L,
                            Name = "AJP Lesson 1 part 3",
                            RecordTimeUtc = new DateTime(2019, 10, 25, 16, 1, 2, 254, DateTimeKind.Utc).AddTicks(7793),
                            SessionId = 102L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 111L,
                            Duration = 10L,
                            Name = "AJP Lesson 1 part 4",
                            RecordTimeUtc = new DateTime(2019, 10, 25, 16, 56, 2, 254, DateTimeKind.Utc).AddTicks(7794),
                            SessionId = 102L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 112L,
                            Duration = 10L,
                            Name = "AJP Lesson 2",
                            RecordTimeUtc = new DateTime(2019, 11, 1, 14, 31, 2, 254, DateTimeKind.Utc).AddTicks(7795),
                            SessionId = 103L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 113L,
                            Duration = 10L,
                            Name = "AJP Lesson 2 part 2",
                            RecordTimeUtc = new DateTime(2019, 11, 1, 15, 16, 2, 254, DateTimeKind.Utc).AddTicks(7796),
                            SessionId = 103L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 114L,
                            Duration = 10L,
                            Name = "AJP Lesson 2 part 3",
                            RecordTimeUtc = new DateTime(2019, 11, 1, 16, 1, 2, 254, DateTimeKind.Utc).AddTicks(7797),
                            SessionId = 103L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        },
                        new
                        {
                            Id = 115L,
                            Duration = 10L,
                            Name = "AJP Lesson 2 part 3",
                            RecordTimeUtc = new DateTime(2019, 11, 1, 16, 56, 2, 254, DateTimeKind.Utc).AddTicks(7798),
                            SessionId = 103L,
                            ThumbnailURL = "/assets/video.jpeg",
                            URL = "/assets/testvideo.mp4"
                        });
                });

            modelBuilder.Entity("vc_webapi.Model.Student", b =>
                {
                    b.HasBaseType("vc_webapi.Model.User");

                    b.HasDiscriminator().HasValue("Student");

                    b.HasData(
                        new
                        {
                            Id = 100L,
                            Email = "some@mail.com",
                            FullName = "BPR Test Student",
                            UserName = "teststudent"
                        });
                });

            modelBuilder.Entity("vc_webapi.Model.Users.Admin", b =>
                {
                    b.HasBaseType("vc_webapi.Model.User");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("vc_webapi.Model.Enrollment", b =>
                {
                    b.HasOne("vc_webapi.Model.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");

                    b.HasOne("vc_webapi.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("vc_webapi.Model.Session", b =>
                {
                    b.HasOne("vc_webapi.Model.Course", null)
                        .WithMany("Sessions")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("vc_webapi.Model.UserSession", b =>
                {
                    b.HasOne("vc_webapi.Model.Session", "Session")
                        .WithMany("UserSessions")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vc_webapi.Model.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("vc_webapi.Model.Video", b =>
                {
                    b.HasOne("vc_webapi.Model.Session", null)
                        .WithMany("Recordings")
                        .HasForeignKey("SessionId");
                });
#pragma warning restore 612, 618
        }
    }
}
